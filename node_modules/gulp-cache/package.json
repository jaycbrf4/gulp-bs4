{
  "_args": [
    [
      {
        "raw": "gulp-cache",
        "scope": null,
        "escapedName": "gulp-cache",
        "name": "gulp-cache",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\WAMP\\www\\gulp"
    ]
  ],
  "_from": "gulp-cache@latest",
  "_id": "gulp-cache@1.0.1",
  "_inCache": true,
  "_location": "/gulp-cache",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-cache-1.0.1.tgz_1509717437144_0.06236099195666611"
  },
  "_npmUser": {
    "name": "dangreen",
    "email": "danon0404@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {
    "clone-buffer": "1.0.0",
    "cloneable-readable": "1.0.0",
    "remove-trailing-separator": "1.1.0"
  },
  "_requested": {
    "raw": "gulp-cache",
    "scope": null,
    "escapedName": "gulp-cache",
    "name": "gulp-cache",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-cache/-/gulp-cache-1.0.1.tgz",
  "_shasum": "611c914e70dad936ec429a9172316c355895fa53",
  "_shrinkwrap": null,
  "_spec": "gulp-cache",
  "_where": "C:\\WAMP\\www\\gulp",
  "author": {
    "name": "Jacob Gable",
    "email": "jacob.gable@gmail.com",
    "url": "http://jacobgable.com"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "node": "6"
          }
        }
      ],
      "stage-0"
    ],
    "plugins": [
      "add-module-exports",
      "transform-runtime"
    ]
  },
  "bugs": {
    "url": "https://github.com/jgable/gulp-cache/issues"
  },
  "contributors": [
    {
      "name": "Tyler Akins",
      "email": "fidian@rumkin.com",
      "url": "https://github.com/fidian"
    },
    {
      "name": "Shinnosuke Watanabe",
      "email": "snnskwtnb@gmail.com",
      "url": "https://github.com/shinnn"
    },
    {
      "name": "Dan Green",
      "email": "danon0404@gmail.com",
      "url": "https://trigen.pro"
    }
  ],
  "dependencies": {
    "babel-runtime": "^6.26.0",
    "cache-swap": "^0.3.0",
    "gulp-util": "^3.0.8",
    "object.pick": "^1.3.0",
    "through2": "^2.0.3",
    "vinyl": "^2.1.0"
  },
  "description": "A cache proxy plugin for Gulp",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "coveralls": "^3.0.0",
    "escope": "^3.6.0",
    "eslint": "^4.10.0",
    "eslint-config-trigen": "^1.2.4",
    "lodash": "^4.17.4",
    "mocha": "^4.0.1",
    "nyc": "^11.3.0",
    "rollup": "^0.50.0",
    "rollup-plugin-babel": "^3.0.2",
    "rollup-plugin-commonjs": "^8.2.6",
    "rollup-plugin-eslint": "^4.0.0",
    "rollup-plugin-json": "^2.3.0",
    "rollup-plugin-node-resolve": "^3.0.0",
    "should": "^13.1.3",
    "sinon": "^4.0.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-bxvGokw83Hhf7V2sneCaQlc3BnzKkAQPkFwSVVHOYQvdGesbOrz87qfv64IddczlaIpC+bvki7XNphyZ40w3aw==",
    "shasum": "611c914e70dad936ec429a9172316c355895fa53",
    "tarball": "https://registry.npmjs.org/gulp-cache/-/gulp-cache-1.0.1.tgz"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "954f73dd86c455ecca8c9737196903cb8c883656",
  "homepage": "https://github.com/jgable/gulp-cache#readme",
  "keywords": [
    "gulpplugin",
    "gulp",
    "cache"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dangreen",
      "email": "danon0404@gmail.com"
    },
    {
      "name": "jgable",
      "email": "jacob.gable@gmail.com"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "name": "gulp-cache",
  "optionalDependencies": {},
  "readme": "# gulp-cache\n\n[![NPM version][npm]][npm-url]\n[![Node version][node]][node-url]\n[![Dependency status][deps]][deps-url]\n[![Build status][build]][build-url]\n[![Coverage status][coverage]][coverage-url]\n\n[npm]: https://img.shields.io/npm/v/gulp-cache.svg\n[npm-url]: https://www.npmjs.com/package/gulp-cache\n\n[node]: https://img.shields.io/node/v/gulp-cache.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://img.shields.io/david/jgable/gulp-cache.svg\n[deps-url]: https://david-dm.org/jgable/gulp-cache\n\n[build]: https://travis-ci.org/jgable/gulp-cache.svg?branch=master\n[build-url]: https://travis-ci.org/jgable/gulp-cache\n\n[coverage]: https://img.shields.io/coveralls/jgable/gulp-cache.svg\n[coverage-url]: https://coveralls.io/r/jgable/gulp-cache\n\nA temp file based caching proxy task for [gulp](http://gulpjs.com/).\n\n## Install\n\n```sh\nnpm i -D gulp-cache\n# or\nyarn add -D gulp-cache\n```\n\n## Usage\n\n```js\nimport fs from 'fs';\nimport gulp from 'gulp';\nimport jshint from 'gulp-jshint';\nimport cache from 'gulp-cache';\n\ngulp.task('lint', () =>\n    gulp.src('./lib/*.js')\n        .pipe(cache(jshint('.jshintrc'), {\n            key: makeHashKey,\n            // What on the result indicates it was successful\n            success(jshintedFile) {\n                return jshintedFile.jshint.success;\n            },\n            // What to store as the result of the successful action\n            value(jshintedFile) {\n                // Will be extended onto the file object on a cache hit next time task is ran\n                return {\n                    jshint: jshintedFile.jshint\n                };\n            }\n        }))\n        .pipe(jshint.reporter('default'))\n});\n\nconst jsHintVersion = '2.4.1',\n    jshintOptions = fs.readFileSync('.jshintrc');\n\nfunction makeHashKey(file) {\n    // Key off the file contents, jshint version and options\n    return `${file.contents.toString('utf8')}${jshintVersion}${jshintOptions}`;\n}\n```\n\n## Clearing the cache\n\nIf you find yourself needing to clear the cache, there is a handy dandy `cache.clearAll()` method:\n\n```js\nimport cache from 'gulp-cache';\n\ngulp.task('clear', () =>\n    cache.clearAll()\n);\n```\n\nYou can then run it with `gulp clear`.\n\n## Options\n\n#### `fileCache`\n\n> [Optional] Where to store the cache objects\n\n- Defaults to `new Cache({ cacheDirName: 'gulp-cache' })`\n\n- Create your own with [`new cache.Cache({ cacheDirName: 'custom-cache' })`](https://github.com/jgable/cache-swap)\n\n#### `name`\n\n> [Optional] The name of the bucket which stores the cached objects\n\n- Defaults to `default`\n\n#### `key`\n\n> [Optional] What to use to determine the uniqueness of an input file for this task.\n\n- Can return a string or a `Promise` that resolves to a string.  \n\n- The result of this method is converted to a unique MD5 hash automatically; no need to do this yourself.\n\n- Defaults to `file.contents` if a Buffer, or `undefined` if a Stream.\n\n#### `success`\n\n> [Optional] How to determine if the resulting file was successful.\n\n- Must return a truthy value that is used to determine whether to cache the result of the task. `Promise` is supported.\n\n- Defaults to true, so any task results will be cached.\n\n#### `value`\n\n> [Optional] What to store as the cached result of the task.\n\n- Can be a function that returns an Object or a `Promise `that resolves to an Object.\n\n- Can also be set to a string that will be picked of the task result file.\n\n- The result of this method is run through `JSON.stringify` and stored in a temp file for later retrieval.\n\n- Defaults to `'contents'` which will grab the resulting file.contents and store them as a string.\n\n## One-to-many caching\n\nTo support one-to-many caching in Your Gulp-plugin, you should:\n\n* Use `clone` method, to save `_cachedKey` property:\n```js\nconst outputFile1 = inputFile.clone({ contents: false }),\n    outputFile2 = inputFile.clone({ contents: false });\n\noutputFile1.contents = new Buffer(...);\noutputFile2.contents = new Buffer(...);\n\nconst outputFiles = [\n    outputFile1,\n    outputFile2,\n    ...\n];\n```\n* Or, do it manually:\n```js\nconst outputFiles = [\n    new Vinyl({..., _cachedKey: inputFile._cachedKey}),\n    new Vinyl({..., _cachedKey: inputFile._cachedKey}),\n    ...\n];\n```\n\n## License\n\n[The MIT License (MIT)](./LICENSE)\n\nCopyright (c) 2014 - 2017 [Jacob Gable](http://jacobgable.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jgable/gulp-cache.git"
  },
  "scripts": {
    "build": "rollup -c",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "lint": "eslint --cache 'src/**/*.js' 'test/**/*.js'",
    "prepublishOnly": "npm run build",
    "test": "npm run lint && nyc mocha -b",
    "watch": "rollup -c -w"
  },
  "version": "1.0.1"
}
